"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PatchHelper = void 0;
const basic_1 = require("../basic");
class PatchHelper extends basic_1.BasicTool {
    constructor() {
        super();
        this.options = undefined;
    }
    setData(options) {
        this.options = options;
        const Zotero = this.getGlobal("Zotero");
        const { target, funcSign, patcher } = options;
        const origin = target[funcSign];
        this.log("patching ", funcSign);
        target[funcSign] = function (...args) {
            if (options.enabled)
                try {
                    return patcher(origin).apply(this, args);
                }
                catch (e) {
                    Zotero.logError(e);
                }
            return origin.apply(this, args);
        };
        return this;
    }
    enable() {
        if (!this.options)
            throw new Error("No patch data set");
        this.options.enabled = true;
        return this;
    }
    disable() {
        if (!this.options)
            throw new Error("No patch data set");
        this.options.enabled = false;
        return this;
    }
}
exports.PatchHelper = PatchHelper;
//# sourceMappingURL=patch.js.map