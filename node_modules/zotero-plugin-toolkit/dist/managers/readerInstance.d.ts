import { BasicOptions, BasicTool, ManagerTool } from "../basic";
import { GlobalInstance } from "./toolkitGlobal";
/**
 * Reader instance hooks.
 * @deprecated
 */
export declare class ReaderInstanceManager extends ManagerTool {
    private globalCache;
    private cachedHookIds;
    constructor(base?: BasicTool | BasicOptions);
    /**
     * Register a reader instance hook
     * @deprecated
     * @remarks
     * initialized: called when reader instance is ready
     * @param type hook type
     * @param id hook id
     * @param hook
     */
    register(type: "initialized", id: string, hook: readerInstanceHook): void;
    /**
     * Unregister hook by id
     * @param id
     */
    unregister(id: string): void;
    /**
     * Unregister all hooks
     */
    unregisterAll(): void;
    private initializeGlobal;
}
export interface ReaderInstanceGlobal extends GlobalInstance {
    initializedHooks: {
        [id: string]: readerInstanceHook;
    };
}
type readerInstanceHook = (instance: _ZoteroTypes.ReaderInstance) => void;
export {};
//# sourceMappingURL=readerInstance.d.ts.map