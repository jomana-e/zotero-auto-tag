import { BasicOptions, BasicTool, ManagerTool } from "../basic";
/**
 * Manage all monkey patching functions.
 * @deprecated Use {@link PatchHelper} instead.
 */
export declare class PatcherManager extends ManagerTool {
    protected readonly patcherIDMap: Map<string, boolean>;
    constructor(base?: BasicTool | BasicOptions);
    /**
     * Patch a function
     * @param object The owner of the function
     * @param funcSign The signature of the function(function name)
     * @param patcher A function that returns the new wrapper of the patched function
     * @returns A unique ID of the patcher, which can be used to unregister the patcher
     */
    register<T, K extends FunctionNamesOf<T>>(object: T, funcSign: K, patcher: (origin: T[K]) => T[K]): string;
    /**
     * Unregister a patcher
     * @param patcherID The ID of the patcher to be unregistered
     */
    unregister(patcherID: string): void;
    /**
     * Unregister all patchers
     */
    unregisterAll(): void;
}
//# sourceMappingURL=patch.d.ts.map