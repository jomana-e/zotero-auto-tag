import { DebugBridge } from "../utils/debugBridge";
import { PluginBridge } from "../utils/pluginBridge";
import { FieldHooksGlobal } from "./fieldHook";
import { ItemBoxGlobal } from "./itemBox";
import { ItemTreeGlobal } from "./itemTree";
import { PromptGlobal } from "./prompt";
import { ReaderInstanceGlobal } from "./readerInstance";
import { ShortcutsGlobal } from "./shortcut";
/**
 * The Singleton class of global parameters used by managers.
 * @example `ToolkitGlobal.getInstance().itemTree.state`
 */
export declare class ToolkitGlobal {
    debugBridge?: DebugBridge;
    pluginBridge?: PluginBridge;
    fieldHooks?: FieldHooksGlobal;
    itemTree?: ItemTreeGlobal;
    itemBox?: ItemBoxGlobal;
    shortcut?: ShortcutsGlobal;
    prompt?: PromptGlobal;
    readerInstance?: ReaderInstanceGlobal;
    currentWindow?: Window;
    private constructor();
    /**
     * Get the global unique instance of `class ToolkitGlobal`.
     * @returns An instance of `ToolkitGlobal`.
     */
    static getInstance(): Required<ToolkitGlobal>;
}
export interface GlobalInstance {
    _ready: boolean;
}
export default ToolkitGlobal;
//# sourceMappingURL=toolkitGlobal.d.ts.map