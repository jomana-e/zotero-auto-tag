"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ZoteroToolkit = void 0;
const basic_1 = require("./basic");
const ui_1 = require("./tools/ui");
const reader_1 = require("./tools/reader");
const extraField_1 = require("./tools/extraField");
const itemTree_1 = require("./managers/itemTree");
const prompt_1 = require("./managers/prompt");
const libraryTabPanel_1 = require("./managers/libraryTabPanel");
const readerTabPanel_1 = require("./managers/readerTabPanel");
const menu_1 = require("./managers/menu");
const preferencePane_1 = require("./managers/preferencePane");
const shortcut_1 = require("./managers/shortcut");
const clipboard_1 = require("./helpers/clipboard");
const filePicker_1 = require("./helpers/filePicker");
const progressWindow_1 = require("./helpers/progressWindow");
const virtualizedTable_1 = require("./helpers/virtualizedTable");
const dialog_1 = require("./helpers/dialog");
const readerInstance_1 = require("./managers/readerInstance");
const fieldHook_1 = require("./managers/fieldHook");
const itemBox_1 = require("./managers/itemBox");
const largePref_1 = require("./helpers/largePref");
const keyboard_1 = require("./managers/keyboard");
const patch_1 = require("./helpers/patch");
const guide_1 = require("./helpers/guide");
/**
 * ‚≠êContains all tools in this lib. Start from here if you are new to this lib.
 * @remarks
 * To minimize your plugin, import the modules you need manually.
 */
class ZoteroToolkit extends basic_1.BasicTool {
    constructor() {
        super();
        this.UI = new ui_1.UITool(this);
        this.Reader = new reader_1.ReaderTool(this);
        this.ExtraField = new extraField_1.ExtraFieldTool(this);
        this.FieldHooks = new fieldHook_1.FieldHookManager(this);
        this.ItemTree = new itemTree_1.ItemTreeManager(this);
        this.ItemBox = new itemBox_1.ItemBoxManager(this);
        this.Keyboard = new keyboard_1.KeyboardManager(this);
        this.Prompt = new prompt_1.PromptManager(this);
        this.LibraryTabPanel = new libraryTabPanel_1.LibraryTabPanelManager(this);
        this.ReaderTabPanel = new readerTabPanel_1.ReaderTabPanelManager(this);
        this.ReaderInstance = new readerInstance_1.ReaderInstanceManager(this);
        this.Menu = new menu_1.MenuManager(this);
        this.PreferencePane = new preferencePane_1.PreferencePaneManager(this);
        this.Shortcut = new shortcut_1.ShortcutManager(this);
        this.Clipboard = (0, basic_1.makeHelperTool)(clipboard_1.ClipboardHelper, this);
        this.FilePicker = (0, basic_1.makeHelperTool)(filePicker_1.FilePickerHelper, this);
        this.Patch = (0, basic_1.makeHelperTool)(patch_1.PatchHelper, this);
        this.ProgressWindow = (0, basic_1.makeHelperTool)(progressWindow_1.ProgressWindowHelper, this);
        this.VirtualizedTable = (0, basic_1.makeHelperTool)(virtualizedTable_1.VirtualizedTableHelper, this);
        this.Dialog = (0, basic_1.makeHelperTool)(dialog_1.DialogHelper, this);
        this.LargePrefObject = (0, basic_1.makeHelperTool)(largePref_1.LargePrefHelper, this);
        this.Guide = (0, basic_1.makeHelperTool)(guide_1.GuideHelper, this);
    }
    /**
     * Unregister everything created by managers.
     */
    unregisterAll() {
        (0, basic_1.unregister)(this);
    }
}
exports.ZoteroToolkit = ZoteroToolkit;
exports.default = ZoteroToolkit;
//# sourceMappingURL=index.js.map